// Mocks generated by Mockito 5.4.4 from annotations
// in big_movie_app/test/di/generate_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:big_movie_app/blocs/api_cubit.dart' as _i5;
import 'package:big_movie_app/blocs/api_state.dart' as _i3;
import 'package:big_movie_app/controls/api_controls.dart' as _i2;
import 'package:big_movie_app/models/movie_model.dart' as _i7;
import 'package:connectivity_plus/connectivity_plus.dart' as _i10;
import 'package:connectivity_plus_platform_interface/connectivity_plus_platform_interface.dart'
    as _i11;
import 'package:flutter_bloc/flutter_bloc.dart' as _i8;
import 'package:http/http.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiControls_0 extends _i1.SmartFake implements _i2.ApiControls {
  _FakeApiControls_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiState_1 extends _i1.SmartFake implements _i3.ApiState {
  _FakeApiState_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_2 extends _i1.SmartFake implements _i4.Response {
  _FakeResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiCubit extends _i1.Mock implements _i5.ApiCubit {
  MockApiCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ApiControls get apiControls => (super.noSuchMethod(
        Invocation.getter(#apiControls),
        returnValue: _FakeApiControls_0(
          this,
          Invocation.getter(#apiControls),
        ),
      ) as _i2.ApiControls);

  @override
  _i3.ApiState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeApiState_1(
          this,
          Invocation.getter(#state),
        ),
      ) as _i3.ApiState);

  @override
  _i6.Stream<_i3.ApiState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i6.Stream<_i3.ApiState>.empty(),
      ) as _i6.Stream<_i3.ApiState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  void noNetworkError() => super.noSuchMethod(
        Invocation.method(
          #noNetworkError,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> fetchMovies() => (super.noSuchMethod(
        Invocation.method(
          #fetchMovies,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> fetchMoreMovies({
    required List<_i7.Movie>? existedMovies,
    required int? page,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMoreMovies,
          [],
          {
            #existedMovies: existedMovies,
            #page: page,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void emit(_i3.ApiState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onChange(_i8.Change<_i3.ApiState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [ApiControls].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiControls extends _i1.Mock implements _i2.ApiControls {
  MockApiControls() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  String get apiKey => (super.noSuchMethod(
        Invocation.getter(#apiKey),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#apiKey),
        ),
      ) as String);

  @override
  String get apiReadAccessToken => (super.noSuchMethod(
        Invocation.getter(#apiReadAccessToken),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#apiReadAccessToken),
        ),
      ) as String);

  @override
  _i6.Future<_i4.Response> fetchPopularMovies({int? page = 1}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPopularMovies,
          [],
          {#page: page},
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #fetchPopularMovies,
            [],
            {#page: page},
          ),
        )),
      ) as _i6.Future<_i4.Response>);
}

/// A class which mocks [Connectivity].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivity extends _i1.Mock implements _i10.Connectivity {
  MockConnectivity() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Stream<List<_i11.ConnectivityResult>> get onConnectivityChanged =>
      (super.noSuchMethod(
        Invocation.getter(#onConnectivityChanged),
        returnValue: _i6.Stream<List<_i11.ConnectivityResult>>.empty(),
      ) as _i6.Stream<List<_i11.ConnectivityResult>>);

  @override
  _i6.Future<List<_i11.ConnectivityResult>> checkConnectivity() =>
      (super.noSuchMethod(
        Invocation.method(
          #checkConnectivity,
          [],
        ),
        returnValue: _i6.Future<List<_i11.ConnectivityResult>>.value(
            <_i11.ConnectivityResult>[]),
      ) as _i6.Future<List<_i11.ConnectivityResult>>);
}
